{
  "id": "6fe0f209-d930-47c0-81da-394709d71465",
  "prevId": "9193365c-be9d-40d5-8d07-93a844833a6a",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.app_users": {
      "name": "app_users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar(320)",
          "primaryKey": false,
          "notNull": true
        },
        "display_name": {
          "name": "display_name",
          "type": "varchar(120)",
          "primaryKey": false,
          "notNull": false
        },
        "hashed_password": {
          "name": "hashed_password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "users_email_unique": {
          "name": "users_email_unique",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_tenant_id_idx": {
          "name": "users_tenant_id_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "app_users_tenant_id_tenants_id_fk": {
          "name": "app_users_tenant_id_tenants_id_fk",
          "tableFrom": "app_users",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.daily_plan_reflections": {
      "name": "daily_plan_reflections",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "daily_plan_id": {
          "name": "daily_plan_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "recorded_at": {
          "name": "recorded_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "mood_score": {
          "name": "mood_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "energy_score": {
          "name": "energy_score",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "summary": {
          "name": "summary",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "blockers": {
          "name": "blockers",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "wins": {
          "name": "wins",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_daily_plan_reflections_plan": {
          "name": "idx_daily_plan_reflections_plan",
          "columns": [
            {
              "expression": "daily_plan_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "recorded_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "daily_plan_reflections_daily_plan_id_daily_plans_id_fk": {
          "name": "daily_plan_reflections_daily_plan_id_daily_plans_id_fk",
          "tableFrom": "daily_plan_reflections",
          "tableTo": "daily_plans",
          "columnsFrom": [
            "daily_plan_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "daily_plan_reflections_tenant_id_tenants_id_fk": {
          "name": "daily_plan_reflections_tenant_id_tenants_id_fk",
          "tableFrom": "daily_plan_reflections",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "daily_plan_reflections_user_id_users_id_fk": {
          "name": "daily_plan_reflections_user_id_users_id_fk",
          "tableFrom": "daily_plan_reflections",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "daily_plan_reflections_tenant_access": {
          "name": "daily_plan_reflections_tenant_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"daily_plan_reflections\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"daily_plan_reflections\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )",
          "withCheck": "auth.uid() = \"daily_plan_reflections\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"daily_plan_reflections\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        }
      },
      "checkConstraints": {
        "daily_plan_reflections_mood_score_range": {
          "name": "daily_plan_reflections_mood_score_range",
          "value": "\"daily_plan_reflections\".\"mood_score\" BETWEEN 1 AND 5"
        },
        "daily_plan_reflections_energy_score_range": {
          "name": "daily_plan_reflections_energy_score_range",
          "value": "\"daily_plan_reflections\".\"energy_score\" BETWEEN 1 AND 5"
        }
      },
      "isRLSEnabled": true
    },
    "public.daily_plans": {
      "name": "daily_plans",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "plan_id": {
          "name": "plan_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "date": {
          "name": "date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "target_minutes": {
          "name": "target_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 120
        },
        "actual_minutes": {
          "name": "actual_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "daily_plans_user_date_unique": {
          "name": "daily_plans_user_date_unique",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_daily_plans_user_date": {
          "name": "idx_daily_plans_user_date",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_daily_plans_tenant_date": {
          "name": "idx_daily_plans_tenant_date",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "daily_plans_tenant_id_tenants_id_fk": {
          "name": "daily_plans_tenant_id_tenants_id_fk",
          "tableFrom": "daily_plans",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "daily_plans_user_id_users_id_fk": {
          "name": "daily_plans_user_id_users_id_fk",
          "tableFrom": "daily_plans",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "daily_plans_plan_id_learning_plans_id_fk": {
          "name": "daily_plans_plan_id_learning_plans_id_fk",
          "tableFrom": "daily_plans",
          "tableTo": "learning_plans",
          "columnsFrom": [
            "plan_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "daily_plans_tenant_access": {
          "name": "daily_plans_tenant_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"daily_plans\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"daily_plans\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )",
          "withCheck": "auth.uid() = \"daily_plans\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"daily_plans\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        }
      },
      "checkConstraints": {
        "daily_plans_status_allowed": {
          "name": "daily_plans_status_allowed",
          "value": "\"daily_plans\".\"status\" IN ('draft', 'in_progress', 'completed', 'skipped')"
        },
        "daily_plans_target_minutes_range": {
          "name": "daily_plans_target_minutes_range",
          "value": "\"daily_plans\".\"target_minutes\" BETWEEN 0 AND 1440"
        },
        "daily_plans_actual_minutes_range": {
          "name": "daily_plans_actual_minutes_range",
          "value": "\"daily_plans\".\"actual_minutes\" BETWEEN 0 AND 1440"
        }
      },
      "isRLSEnabled": true
    },
    "public.daily_tasks": {
      "name": "daily_tasks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "daily_plan_id": {
          "name": "daily_plan_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "phase_id": {
          "name": "phase_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "topic": {
          "name": "topic",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "estimated_minutes": {
          "name": "estimated_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 30
        },
        "actual_minutes": {
          "name": "actual_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "order_num": {
          "name": "order_num",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "daily_tasks_plan_order_unique": {
          "name": "daily_tasks_plan_order_unique",
          "columns": [
            {
              "expression": "daily_plan_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "order_num",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_daily_tasks_plan_order": {
          "name": "idx_daily_tasks_plan_order",
          "columns": [
            {
              "expression": "daily_plan_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "order_num",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_daily_tasks_status": {
          "name": "idx_daily_tasks_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "daily_tasks_tenant_id_tenants_id_fk": {
          "name": "daily_tasks_tenant_id_tenants_id_fk",
          "tableFrom": "daily_tasks",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "daily_tasks_daily_plan_id_daily_plans_id_fk": {
          "name": "daily_tasks_daily_plan_id_daily_plans_id_fk",
          "tableFrom": "daily_tasks",
          "tableTo": "daily_plans",
          "columnsFrom": [
            "daily_plan_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "daily_tasks_tenant_access": {
          "name": "daily_tasks_tenant_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n      SELECT 1\n      FROM daily_plans dp\n      WHERE dp.id = \"daily_tasks\".\"daily_plan_id\"\n        AND (\n          dp.user_id = auth.uid() OR\n          EXISTS (\n            SELECT 1\n            FROM public.profiles AS admin_profiles\n            WHERE admin_profiles.id = auth.uid()\n              AND admin_profiles.tenant_id = dp.tenant_id\n              AND admin_profiles.role = 'admin'\n          )\n        )\n    )",
          "withCheck": "EXISTS (\n      SELECT 1\n      FROM daily_plans dp\n      WHERE dp.id = \"daily_tasks\".\"daily_plan_id\"\n        AND (\n          dp.user_id = auth.uid() OR\n          EXISTS (\n            SELECT 1\n            FROM public.profiles AS admin_profiles\n            WHERE admin_profiles.id = auth.uid()\n              AND admin_profiles.tenant_id = dp.tenant_id\n              AND admin_profiles.role = 'admin'\n          )\n        )\n    )"
        }
      },
      "checkConstraints": {
        "daily_tasks_estimated_minutes_range": {
          "name": "daily_tasks_estimated_minutes_range",
          "value": "\"daily_tasks\".\"estimated_minutes\" BETWEEN 5 AND 480"
        },
        "daily_tasks_actual_minutes_range": {
          "name": "daily_tasks_actual_minutes_range",
          "value": "\"daily_tasks\".\"actual_minutes\" BETWEEN 0 AND 1440"
        },
        "daily_tasks_status_allowed": {
          "name": "daily_tasks_status_allowed",
          "value": "\"daily_tasks\".\"status\" IN ('pending', 'in_progress', 'completed', 'skipped')"
        }
      },
      "isRLSEnabled": true
    },
    "public.learning_goals": {
      "name": "learning_goals",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "varchar(200)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "current_level": {
          "name": "current_level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 1
        },
        "target_level": {
          "name": "target_level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 10
        },
        "target_date": {
          "name": "target_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_learning_goals_user_tenant": {
          "name": "idx_learning_goals_user_tenant",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_learning_goals_status": {
          "name": "idx_learning_goals_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "learning_goals_user_id_users_id_fk": {
          "name": "learning_goals_user_id_users_id_fk",
          "tableFrom": "learning_goals",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "learning_goals_tenant_id_tenants_id_fk": {
          "name": "learning_goals_tenant_id_tenants_id_fk",
          "tableFrom": "learning_goals",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "learning_goals_tenant_access": {
          "name": "learning_goals_tenant_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"learning_goals\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"learning_goals\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )",
          "withCheck": "auth.uid() = \"learning_goals\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"learning_goals\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        }
      },
      "checkConstraints": {
        "learning_goals_type_allowed": {
          "name": "learning_goals_type_allowed",
          "value": "\"learning_goals\".\"type\" IN ('exam', 'skill', 'career')"
        },
        "learning_goals_current_level_range": {
          "name": "learning_goals_current_level_range",
          "value": "\"learning_goals\".\"current_level\" BETWEEN 1 AND 10"
        },
        "learning_goals_target_level_range": {
          "name": "learning_goals_target_level_range",
          "value": "\"learning_goals\".\"target_level\" BETWEEN 1 AND 10"
        },
        "learning_goals_status_allowed": {
          "name": "learning_goals_status_allowed",
          "value": "\"learning_goals\".\"status\" IN ('active', 'completed', 'paused', 'cancelled')"
        }
      },
      "isRLSEnabled": true
    },
    "public.learning_plans": {
      "name": "learning_plans",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "goal_id": {
          "name": "goal_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "varchar(200)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "plan_data": {
          "name": "plan_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "start_date": {
          "name": "start_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "end_date": {
          "name": "end_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_learning_plans_user_goal": {
          "name": "idx_learning_plans_user_goal",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "goal_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_learning_plans_status": {
          "name": "idx_learning_plans_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "learning_plans_user_id_users_id_fk": {
          "name": "learning_plans_user_id_users_id_fk",
          "tableFrom": "learning_plans",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "learning_plans_tenant_id_tenants_id_fk": {
          "name": "learning_plans_tenant_id_tenants_id_fk",
          "tableFrom": "learning_plans",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "learning_plans_goal_id_learning_goals_id_fk": {
          "name": "learning_plans_goal_id_learning_goals_id_fk",
          "tableFrom": "learning_plans",
          "tableTo": "learning_goals",
          "columnsFrom": [
            "goal_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "learning_plans_tenant_access": {
          "name": "learning_plans_tenant_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"learning_plans\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"learning_plans\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )",
          "withCheck": "auth.uid() = \"learning_plans\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"learning_plans\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        }
      },
      "checkConstraints": {
        "learning_plans_status_allowed": {
          "name": "learning_plans_status_allowed",
          "value": "\"learning_plans\".\"status\" IN ('active', 'completed', 'paused', 'cancelled')"
        }
      },
      "isRLSEnabled": true
    },
    "public.learning_tasks": {
      "name": "learning_tasks",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "plan_id": {
          "name": "plan_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "goal_id": {
          "name": "goal_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "title": {
          "name": "title",
          "type": "varchar(200)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "type": {
          "name": "type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'study'"
        },
        "difficulty": {
          "name": "difficulty",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 5
        },
        "estimated_minutes": {
          "name": "estimated_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 60
        },
        "actual_minutes": {
          "name": "actual_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "resources": {
          "name": "resources",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "default": "'{}'::text[]"
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "due_date": {
          "name": "due_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_learning_tasks_plan_status": {
          "name": "idx_learning_tasks_plan_status",
          "columns": [
            {
              "expression": "plan_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_learning_tasks_user_due": {
          "name": "idx_learning_tasks_user_due",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "due_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "learning_tasks_user_id_users_id_fk": {
          "name": "learning_tasks_user_id_users_id_fk",
          "tableFrom": "learning_tasks",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "learning_tasks_tenant_id_tenants_id_fk": {
          "name": "learning_tasks_tenant_id_tenants_id_fk",
          "tableFrom": "learning_tasks",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "learning_tasks_plan_id_learning_plans_id_fk": {
          "name": "learning_tasks_plan_id_learning_plans_id_fk",
          "tableFrom": "learning_tasks",
          "tableTo": "learning_plans",
          "columnsFrom": [
            "plan_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "learning_tasks_goal_id_learning_goals_id_fk": {
          "name": "learning_tasks_goal_id_learning_goals_id_fk",
          "tableFrom": "learning_tasks",
          "tableTo": "learning_goals",
          "columnsFrom": [
            "goal_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "learning_tasks_tenant_access": {
          "name": "learning_tasks_tenant_access",
          "as": "PERMISSIVE",
          "for": "ALL",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"learning_tasks\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"learning_tasks\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )",
          "withCheck": "auth.uid() = \"learning_tasks\".\"user_id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"learning_tasks\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        }
      },
      "checkConstraints": {
        "learning_tasks_type_allowed": {
          "name": "learning_tasks_type_allowed",
          "value": "\"learning_tasks\".\"type\" IN ('study', 'reading', 'practice', 'quiz', 'project', 'review', 'coding')"
        },
        "learning_tasks_difficulty_range": {
          "name": "learning_tasks_difficulty_range",
          "value": "\"learning_tasks\".\"difficulty\" BETWEEN 1 AND 10"
        },
        "learning_tasks_estimated_minutes_range": {
          "name": "learning_tasks_estimated_minutes_range",
          "value": "\"learning_tasks\".\"estimated_minutes\" BETWEEN 5 AND 480"
        },
        "learning_tasks_status_allowed": {
          "name": "learning_tasks_status_allowed",
          "value": "\"learning_tasks\".\"status\" IN ('pending', 'in_progress', 'completed', 'skipped')"
        }
      },
      "isRLSEnabled": true
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "auth.uid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "varchar(24)",
          "primaryKey": false,
          "notNull": true
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "varchar(16)",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "profiles_username_unique": {
          "name": "profiles_username_unique",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "username",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "profiles_tenant_id_idx": {
          "name": "profiles_tenant_id_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "profiles_id_users_id_fk": {
          "name": "profiles_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "profiles_tenant_id_tenants_id_fk": {
          "name": "profiles_tenant_id_tenants_id_fk",
          "tableFrom": "profiles",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "profiles_select_own": {
          "name": "profiles_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"profiles\".\"id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"profiles\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        },
        "profiles_insert_own": {
          "name": "profiles_insert_own",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "auth.uid() = \"profiles\".\"id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"profiles\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        },
        "profiles_update_own": {
          "name": "profiles_update_own",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"profiles\".\"id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"profiles\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )",
          "withCheck": "auth.uid() = \"profiles\".\"id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"profiles\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        },
        "profiles_delete_own": {
          "name": "profiles_delete_own",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "auth.uid() = \"profiles\".\"id\" OR EXISTS (\n      SELECT 1\n      FROM public.profiles AS admin_profiles\n      WHERE admin_profiles.id = auth.uid()\n        AND admin_profiles.tenant_id = \"profiles\".\"tenant_id\"\n        AND admin_profiles.role = 'admin'\n    )"
        }
      },
      "checkConstraints": {
        "profiles_username_length_min": {
          "name": "profiles_username_length_min",
          "value": "char_length(\"profiles\".\"username\") >= 3"
        },
        "profiles_role_allowed": {
          "name": "profiles_role_allowed",
          "value": "\"profiles\".\"role\" in ('user', 'admin', 'editor', 'viewer')"
        }
      },
      "isRLSEnabled": true
    },
    "public.app_sessions": {
      "name": "app_sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token_hash": {
          "name": "token_hash",
          "type": "varchar(128)",
          "primaryKey": false,
          "notNull": true
        },
        "remember": {
          "name": "remember",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "last_used_at": {
          "name": "last_used_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "app_sessions_tenant_id_idx": {
          "name": "app_sessions_tenant_id_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "app_sessions_user_id_idx": {
          "name": "app_sessions_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "app_sessions_token_hash_unique": {
          "name": "app_sessions_token_hash_unique",
          "columns": [
            {
              "expression": "token_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "app_sessions_tenant_id_tenants_id_fk": {
          "name": "app_sessions_tenant_id_tenants_id_fk",
          "tableFrom": "app_sessions",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "app_sessions_user_id_app_users_id_fk": {
          "name": "app_sessions_user_id_app_users_id_fk",
          "tableFrom": "app_sessions",
          "tableTo": "app_users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.habit_runs": {
      "name": "habit_runs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "tenant_id": {
          "name": "tenant_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "habit_code": {
          "name": "habit_code",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "date": {
          "name": "date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "planned_minutes": {
          "name": "planned_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "actual_minutes": {
          "name": "actual_minutes",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "pending"
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "meta": {
          "name": "meta",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'{}'::jsonb"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "habit_runs_user_day_code_unique": {
          "name": "habit_runs_user_day_code_unique",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "habit_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "habit_runs_tenant_day_idx": {
          "name": "habit_runs_tenant_day_idx",
          "columns": [
            {
              "expression": "tenant_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "habit_runs_tenant_id_tenants_id_fk": {
          "name": "habit_runs_tenant_id_tenants_id_fk",
          "tableFrom": "habit_runs",
          "tableTo": "tenants",
          "columnsFrom": [
            "tenant_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "habit_runs_user_id_users_id_fk": {
          "name": "habit_runs_user_id_users_id_fk",
          "tableFrom": "habit_runs",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "habit_runs_status_allowed": {
          "name": "habit_runs_status_allowed",
          "value": "\"habit_runs\".\"status\" IN ('pending', 'doing', 'done', 'skipped')"
        },
        "habit_runs_planned_minutes_range": {
          "name": "habit_runs_planned_minutes_range",
          "value": "\"habit_runs\".\"planned_minutes\" BETWEEN 0 AND 1440"
        },
        "habit_runs_actual_minutes_range": {
          "name": "habit_runs_actual_minutes_range",
          "value": "\"habit_runs\".\"actual_minutes\" BETWEEN 0 AND 1440"
        }
      },
      "isRLSEnabled": true
    },
    "public.tenants": {
      "name": "tenants",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(120)",
          "primaryKey": false,
          "notNull": true
        },
        "slug": {
          "name": "slug",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true
        },
        "logo_url": {
          "name": "logo_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "tagline": {
          "name": "tagline",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "tenants_slug_unique": {
          "name": "tenants_slug_unique",
          "columns": [
            {
              "expression": "slug",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "tenants_select_own": {
          "name": "tenants_select_own",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n      SELECT 1\n      FROM public.profiles AS member_profiles\n      WHERE member_profiles.tenant_id = \"tenants\".\"id\"\n        AND member_profiles.id = auth.uid()\n    )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": true
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
